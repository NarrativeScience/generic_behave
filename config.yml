# Orb 'narrativescience/ghpr@0.0.5' resolved to 'narrativescience/ghpr@0.0.5'
version: 2
jobs:
  test:
    docker:
    - image: circleci/python:3.7
    steps:
    - checkout
    - run:
        command: |
          # Check `jq` dependency
          if ! (command -v jq >/dev/null 2>&1); then
            echo "This command requires `jq` to be installed"
            exit 1
          fi

          GITHUB_PR_NUMBER=$(echo "$CIRCLE_PULL_REQUEST" | sed "s/.*\/pull\///")
          url="https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/pulls/${GITHUB_PR_NUMBER}"
          base_branch=$(curl --user "${GITHUB_USERNAME}:${GITHUB_PASSWORD}" "$url" | jq -e '.base.ref' | tr -d '"')
          echo "$base_branch"
          echo "export GITHUB_PR_BASE_BRANCH=$base_branch" >> $BASH_ENV
        name: Get the base branch
    - run:
        command: |
          set +e
          git config --global user.email "$GITHUB_EMAIL"
          git config --global user.name "$GITHUB_USERNAME"
          git fetch && git merge "origin/$GITHUB_PR_BASE_BRANCH" --no-edit
          if [[ $? -ne 0 && "false" == "false" ]]; then
            echo "Failed to merge $GITHUB_PR_BASE_BRANCH into $CIRCLE_BRANCH"
            exit 1
          fi
        name: Build prospective merge branch
    - run:
        command: |
          pip install pre-commit tox flit
          pre-commit install
        name: Install dependencies
    - run:
        name: Run commit hooks
        command: |
          pre-commit run \
            --source "origin/${GITHUB_PR_BASE_BRANCH}" \
            --origin "origin/${CIRCLE_BRANCH}" \
            --show-diff-on-failure
    - run:
        command: tox
    - run:
        command: flit build
    - run:
        command: |
          GITHUB_PR_NUMBER=$(echo "$CIRCLE_PULL_REQUEST" | sed "s/.*\/pull\///")
          curl \
            -X POST \
            -d "{\"body\": \"Tests failed!\"}" \
            --user "${GITHUB_USERNAME}:${GITHUB_PASSWORD}" \
            "https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/issues/${GITHUB_PR_NUMBER}/comments"
        name: Post comment to PR
        when: on_fail
  publish:
    docker:
    - image: circleci/python:3.7
    steps:
    - checkout
    - run:
        command: pip install flit
    - run:
        command: flit build
    - run:
        command: flit publish
workflows:
  pull_request:
    jobs:
    - test:
        filters:
          branches:
            ignore:
            - master
        context: opensource
  publish:
    jobs:
    - publish:
        filters:
          tags:
            only: /v[0-9]+(\.[0-9]+)*/
          branches:
            ignore: /.*/
        context: opensource
  version: 2

# Original config.yml file:
# version: 2.1
# 
# orbs:
#   ghpr: narrativescience/ghpr@0.0.5
# 
# commands:
#   install-deps:
#     description: Install dependencies and initialize pre-commit hooks
#     steps:
#       - run:
#           command: |
#             pip install pre-commit tox flit
#             pre-commit install
#           name: Install dependencies
# 
# jobs:
#   test:
#     docker:
#       - image: circleci/python:3.7
#     steps:
#       - ghpr/build-prospective-branch
#       - install-deps
#       - run:
#           name: Run commit hooks
#           command: |
#             pre-commit run \\
#               --source \"origin/${GITHUB_PR_BASE_BRANCH}\" \\
#               --origin \"origin/${CIRCLE_BRANCH}\" \\
#               --show-diff-on-failure
#       - run: tox
#       - run: flit build
#       - ghpr/post-pr-comment:
#           comment: Tests failed!
#           when: on_fail
#   publish:
#     docker:
#       - image: circleci/python:3.7
#     steps:
#       - checkout
#       - run: pip install flit
#       - run: flit build
#       - run: flit publish
# 
# workflows:
#   pull_request:
#     jobs:
#       - test:
#           context: opensource
#           filters:
#             branches:
#               ignore:
#                 - master
#   publish:
#     jobs:
#       - publish:
#           context: opensource
#           filters:
#             tags:
#               only: /v[0-9]+(\\.[0-9]+)*/
#             branches:
#               ignore: /.*/